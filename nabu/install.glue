## Installs the applications locally
[] project ?= null
force ?= false
inject(nabu.settings())

applications = series("integrator", "developer", "cli")

for (application : applications)
	if (project == null || position(application, project) >= 0)
		applicationPath = nabuApplications + "/" + application
		if (force || file.exists(nabuWorkspace + "/packaging-" + application))
			fresh = false
			if (!file.exists(applicationPath))
				system.mkdir("-p", applicationPath)
				fresh = true
			system.cd(nabuWorkspace + "/packaging-" + application)
			system.mvn("clean", "package")
			zip = first(file.list("target", fileRegex: ".*\.zip"))
			if (zip == null)
				echo("Build failed")
			else
				if (fresh)
					echo("Installing " + application)
				else
					echo("Updating " + application)
				system.cp("target/" + zip, applicationPath + "/release.zip")
				system.cd(applicationPath)
				# remove the library folder which is the primary updates of interest
				system.rm("-rf", "lib")
				# unzip without overwriting existing files
				system.unzip("-n", "release.zip")
				# create a runnable file

				if (application == "developer")
					runnableFile = nabuApplications + "/nabu-developer.sh"
					if (!file.exists(runnableFile))
						content = java + " -Xmx8096m --module-path " + javafx + "/lib --add-modules=ALL-MODULE-PATH,java.sql -Dvm.screenshot=true -Dshow.hidden=false -Dnio.debug.pipeline=false -Dbe.nabu.eai.repository.cacheModules=true -Dhttp.client.debug=false -Dsshj=true -Dsun.java2d.xrender=false -Dversion=2 -Ddevelopment=true -cp '" + applicationPath + "/lib/*:.' be.nabu.eai.developer.Main " + '"$@"'
						file.write(runnableFile, content)
						# make sure we can run it
						system.chmod("u+x", runnableFile)
				else if (application == "integrator")
					runnableFile = nabuApplications + "/nabu-integrator.sh"
					if (!file.exists(runnableFile))
						content = java + " -Xmx8096m -noverify -Dhttp.streamingMode=true -Dhttp.client.debug=false -Dnio.debug.pipeline=false -Ddevelopment=true -Dversion=2 -Dmath.always.doubles=true -cp '" + applicationPath + "/lib/*:.' be.nabu.eai.server.Standalone " + '"$@"'
						file.write(runnableFile, content)
						# make sure we can run it
						system.chmod("u+x", runnableFile)
				else if (application == "cli")
					runnableFile = nabuApplications + "/glue"
					if (!file.exists(runnableFile))
						content = java + " -Dglass.platform=Monocle -Dmonocle.platform=Headless -Dglue.parallel=true -Dhttp.client.debug=true -Dversion=2 -Ddevelopment=true -Dmath.always.doubles=true -cp '" + applicationPath + "/lib/*' be.nabu.glue.Main " + '"$@"'
						file.write(runnableFile, content)
						# make sure we can run it
						system.chmod("u+x", runnableFile)
					runnableFile = nabuApplications + "/glue-shell"
					if (!file.exists(runnableFile))
						content = java + " -Dglass.platform=Monocle -Dmonocle.platform=Headless -Dglue.parallel=true -Dhttp.client.debug=true -Dversion=2 -Ddevelopment=true -Dmath.always.doubles=true -cp '" + applicationPath + "/lib/*' be.nabu.glue.Shell " + '"$@"'
						file.write(runnableFile, content)
						# make sure we can run it
						system.chmod("u+x", runnableFile)
	else
		echo("Skipping " + project)
